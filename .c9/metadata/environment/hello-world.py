{"changed":true,"filter":false,"title":"hello-world.py","tooltip":"/hello-world.py","value":"\"\"\"\nYour module description\n\"\"\"\n# print(\"hello World\")\n# Variables declared here\n# string_to_print = \"Variable a\"\n# print(\"string_to_print\")\n# int_to_print = 10\n# print(int_to_print)\n# # print(\"10\")\n\n# intVar = 10\n# charvar = \"Charlie\"\n# boolVar = True\n# floatVar = 100.50\n\n# print(type(intVar), intVar)\n# print(type(charvar), charvar)\n# print(type(boolVar), boolVar)\n# print(type(floatVar), floatVar)\n#-------------------------------------\n\n# apples = 2\n# oranges = 4\n# apples = oranges\n# print(apples)\n\n# -------------------------------\n#Lists [Lists are mutable - they can be changed]\n\n# class_roster = [\"Shravani\",\"Samira\",\"Prabhjort\", \"a\", \"b\", \"c\", \"c\"] \n# test_scores = [86,93,80]\n\n\n# print(class_roster) \n# print(test_scores)\n\n# print(\"class_roster is a type of \", type(class_roster))\n# print(\"Printing first element of class_rooster: \", class_roster[2])\n\n\n#-----------------------------\n#loop thru lists\n\n# for xyz in class_roster: \n#     print(xyz)\n# print()\n# for score in test_scores: \n#     print(score)\n# print()\n\n#-----------------------------\n# add new elements to list\n\n# class_roster.append('Charlie')\n# for student in class_roster: \n#     print(student)\n# print()\n\n# class_roster.insert(3,\"Natacha\")\n# for student in class_roster: \n#     print(student)\n\n# update a list element\n\n# print(class_roster[1])\n# class_roster[1]= \"Freddie\"\n# print(class_roster[1])\n# print(class_roster)\n\n# -------------------------------\n# Tuples (Tuples are immutable - they can NOT be changed)\n# Tuples are indexed ( starting with an index value of 0)\n# Tuples allow duplicate values\n# Tuples are ordered - and that order cannot change\n\n# class_rosterT = (\"Shravani\",\"Samira\",\"Prabhjort\",  \"pear\", \"banana\", \"apple\",)\n\n# print(\"Tuple students \", class_rosterT) \n\n\n# class_rosterL = [\"Shravani\",\"Samira\",\"Prabhjort\", \"Shravani\"]\n# print(\"List students \", class_rosterL) \n\n# print(\"class_roster is a type of \", type(class_rosterT))\n# print(len(class_rosterT))\n# print(\"Printing first element of class_rooster: \", class_rosterT[-1])\n\n\n# for student in class_rosterT:\n#     print(student)\n    \n# # Is this a touple?\n# thistuple = (\"apple\",)\n# print(type(thistuple))\n\n# # NOT a tuple\n# thistuple = (\"apple\")\n# print(type(thistuple)) \n\n# tuple1 = (\"abc\", 34, True, 40, \"male\")\n# for item in tuple1:\n#     print(\"this is a:\", item, \" of \", type(item))\n\n\n# Tuples are immutable - so you cannot change them once they are created\n# but there is a workaround  ;-)\n# turn it into a list, change the list and turn it back into a tuple\n# for this we need to use a programming language 'thing' called a constructor.\n# list() and tuple() are examples of constructors\n# Definition of Constructor\n# object-oriented programming\n# In class-based, object-oriented programming, a constructor is a special type of subroutine \n# called to create an object. It prepares the new object for use, often accepting arguments that \n# the constructor uses to set required member variables.\n\n# x = (\"apple\", \"banana\", \"cherry\")\n# print(\"here x is the original tuple\", x, type(x))\n# y = list(x)\n# print(\"Now it is a \",type(y))\n# y[1] = \"kiwi\"\n# x = tuple(y)\n# print(\"here x is a \" , type(x))\n# print(x) \n\n# unpacking - yesterday Mervis (I think...) asked about this\n\n# fruits = (\"apple\", \"banana\", \"cherry\")\n# (green, yellow, red) = fruits\n# print(green)\n# print(yellow)\n# print(red)\n\n\n# more loops using indexes\n\n# thistuple = (\"apple\", \"banana\", \"cherry\")\n# print(len(thistuple))\n# i = 0\n# while i < len(thistuple):\n#   print(thistuple[i])\n#   i = i + 1 \n# print(\"im done now\")\n# -----------------------------\n# Dictionaries {}\n# A dictionary is ordered, changable and do not allow duplicates\n# dictionaries store data in key:value pairs\n\n\n# thisdict =\t{\n#   \"brand\": \"Ford\",\n#   \"model\": \"Mustang\",\n#   \"year\": 1964\n# }\n# print(thisdict)\n\n# print(thisdict[\"brand\"])\n\n# duplicate values will overwrite existing values\n# thisdict =\t{\n#   \"brand\": \"Ford\",\n#   \"model\": \"Mustang\",\n#   \"year\": 1964,\n#   \"brand\": \"BMW\"\n# }\n# print(thisdict)\n\n# print(thisdict[\"brand\"])\n\n# # dicts allow all datatypes:\n\n# thisdict =\t{\n#   \"brand\": \"Ford\",\n#   \"electric\": False,\n#   \"year\": 1964,\n#   \"colors\": [\"red\", \"white\", \"blue\"]\n# } \n\n# print(thisdict)\n\n#  Just like you can use the list and the tuple constructors, there is a dict constructor\n# this can be used to create a dictionary\n\n# thisdict = dict(name = \"John\", age = 36, country = \"Norway\")\n# print(thisdict) \n# print(thisdict[\"name\"])\n\n\n# ---------------------------------------------------\n# working with files\n\n# # Files\n\n# print(\"Working with Files\")\n# f = open('python1','w')\n# f.write('Hello from Python!!\\n')\n# f.write('Working wih files is easy...\\n')\n# f.write('It is cool ...')\n# f.close\n\n\n# print(\"Reading file\")\n# f=open('python1','r')\n# line1=f.readline()\n# line2=f.readline()\n# line3=f.readline()\n# print('-----')\n# print(line1, end='')\n# print(line2, end='')\n# print(line3, end='')\n# f.close()\n# # ##\n\n# f=open('python1','r')\n# i=0\n# for line in f:\n#     print(i,\":\", line, end='')\n#     i=i+1\n# f.close()\n\n# # ##\n# f=open('python1','r')\n# l=[line.upper() for line in f]\n# f.close()\n# print(l)\n# ##\n# f=open('python1','r')\n# try:\n#     for line in f:\n#         print(line, end='')\n# finally:\n#     f.close()\n#\n# with open('python1','r') as f:\n#     print(\"Last example\")\n#     for line in f:\n#         print(line, end='')\n\n\n\n\n# ---------------------------------\n# Conditional logic\n#\n\n# --- IF statements\n#\n# a = 200\n# b = 33\n# if b < a:\n#   print(\"b is greater than a\")\n# #elif a == b:\n# #  print(\"a and b are equal\")\n# else:\n#   print(\"a is greater than b\")\n  \n# a = 200\n# b = 33\n# c = 500\n# if a > b and c > a:\n#   print(\"Both conditions are True\")\n\n# a = 200\n# b = 33\n# c = 500\n# if a > b or a > c:\n#   print(\"At least one of the conditions is True\")\n\n# x = 11\n\n# if x > 10:\n#   print(\"Above ten,\")\n# elif x == 11:\n#     print(\"but not above 20.\") \n# else:\n#     print(\"it is equal to 10!\")\n\n# names = [\"charlie\", \"natacha\", \"kåre\"]\n\n# for name in names:\n#     newName = name.capitalize()\n#     print(newName)\n    \n# for name in names:\n#     newUpper = name.upper()  \n#     print(newUpper)\n    \n#     name.lower()\n##\n# While loops\n#\n\n# i = 1\n# while i < 6:\n#   print(i)\n#   i += 1\n\n# i = 1\n# while i < 6:\n#   if i == 3:\n#     break\n#   print(i)\n#   i += 1 \n\n\n# fruits = [\"apple\", \"banana\", \"cherry\"]\n# for x in fruits:\n# #   if x == \"banana\":\n# #     break\n#   print(x)\n\n\n# #var_1 = “this is a word set of double quotes”\n# var_2 = \"this is a word set of double quotes\"\n# msg1 = \"I’m a message\" , \"more stuff\"\n# print(msg1)\n# msg2 = \"I’m a message\" + \" \" + \"more stuff\"\n# print(msg2)\n\n\n# for x in \"banana\":\n#   print(x)\n# ---------------------------------\n# Functions\n\n# def add_3(x):\n#   y = x + 3\n#   return y\n  \n# print(add_3(4))\n\n\n# def greetuser(): \n#     print(\"Hello there!\")\n    \n# greetuser()\n\n# def greet_userP(name): \n#     print(\"Hello \" + name)\n# greet_userP(\"Sam\")\n\n# def my_function(fname, lname):\n#   print(fname + \" \" + lname)\n\n# my_function(\"Mickey\", \"Mouse\") \n\n# def my_function(fname, lname):\n#   print(str(fname) + \" \" + str(lname))\n\n# my_function(\"lastname\", \"firstname\") \n\n# If you don't know HOW many arguments will arrive... *in front of the arg name\n# def my_function(*kids):\n#   print(\"The youngest child is \" + kids[-1])\n\n# my_function(\"Emil\", \"Tobias\",\"a\", \"b\", \"c\", \"one more not youngest kid\", \"Linus\") \n\n# def my_function(child3, child2, child1):\n#   print(\"The youngest child is \" + child3, end='')\n#   print(\"child 2 is \" + child2 + \" and child 1 is \" + child1)\n#   print(\"child 2 is \" + child2,  end='')\n#   print(\"child 1 is \" + child1)\n\n# my_function(child3 = \"Linus\", child2 = \"Tobias\",  child1 = \"Emil\" ) \n\n#default parameter value\n# def my_function(country = \"Denmark\"):\n#   print(\"I am from \" + country)\n\n# my_function(\"Sweden\")\n# my_function(\"India\")\n# my_function()\n# my_function(\"Brazil\") \n\n# parameter is a list\n# def my_function(food):\n#   for x in food:\n#     print(x)\n\n# fruits = [\"apple\", \"banana\", \"cherry\"]\n# my_function(fruits)\n# dinner = (\"Chilli Con Carne\", \"BBQ\", \"Spinach\")\n# my_function(dinner)\n\n# def my_function(x):\n#   return 5 * x\n\n# print(my_function(3))  # called with 3 as a param value\n# print(my_function(5))\n# print(my_function(9)) \n\n\n# Functions can call themselves:\n# Recursion is the process of a function calling itself from within its own code. \n# You can think of it as another way to accomplish a looping construct. \n# The recursion pattern appears in many scenarios in the real world, and we’ll cover\n# some examples of recursion in Python here. \n# A recursive function just keeps calling itself until it has completed the problem at hand. \n# That brings up a good point, and that is to make sure that your recursive function actually \n# terminates and returns at some point. Otherwise, the recursive function will run forever, \n# exhaust your memory, and crash your computer. Having a step where the function actually \n# finishes is known as a breaking condition.\n\n# The Fibonacci sequence happens everywhere in the world and in all of nature. \n# The sequence 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, and so on is the Fibonacci sequence. \n# Each successive number is found by adding up the two numbers before it. \n# Here is how we compute the Fibonacci sequence in Python using a recursive function.\n\n# def fibonacci(n):\n#     if n <= 1:\n#         return n\n#     else:\n#         return fibonacci(n - 1) + fibonacci(n - 2)\n\n\n# number = 14\n\n# print('Fibonacci sequence:')\n# for i in range(number):\n#     print(fibonacci(i))\n\n\n\n# def tri_recursion(k):\n#   if(k > 0):\n#     result = k + tri_recursion(k - 1)\n#     print(result)\n#   else:\n#     result = 0\n#   return result\n\n# print(\"\\n\\nRecursion Example Results\")\n# tri_recursion(6)\n\n# ------------------------------------------\n# Maths in python\n#\n# import math\n\n# x = min(5, 10, 25)\n# y = max(5, 10, 25)\n\n# print(\"min number in x list is: \", x)\n# print(\"max number in y list is: \", y) \n\n# x = pow(4, 3)\n# print(x) \n\n# x = math.sqrt(64)\n# # print(x) \n\n# absolute = -5.999 \n# floor_test = 198.42\n# result1 = math.fabs(absolute) \n# result2 = math.floor(floor_test)\n# print(result1, \" is the absolute value of \", absolute) \n# print(result2, \" is the floor of \", floor_test)\n\n# def div_by_zero_try(number):\n#     try:\n#         value = 5 / number\n#     except ZeroDivisionError:\n#         print('Divide by zero error')\n#         value = 9999999\n#     return value\n    \n# def div_by_zero(number):\n#     value = 5 / number\n#     return value\n  \n\n# print(div_by_zero_try(2))\n# print(div_by_zero_try(0))\n# print(div_by_zero_try(2))\n# #print(div_by_zero(0))\n# print(div_by_zero(20))\n    \n#print(div_by_zero(0))\n\n\n\n\n# ------------------------------------------\n# OS in python\n#\n\n\n# import os \n\n# dirs = os.listdir() \n# print(dirs)\n# print()\n# os.mkdir(\"newFolder\") \n# dirs = os.listdir() \n# print(dirs)\n# print()\n# os.rmdir(\"newFolder\") \n# dirs = os.listdir() \n# print(dirs)\n# user = os.getlogin()\n# print(user)\n\n\n# Json example from book - does not work\n# ------------------------------\n# import json\n# filename = \"userName.json\"\n# name = ''\n# # print(filename)\n# # Check for a history file \n# try:\n#     with open(filename, 'r') as r: # Load the user's name from the history file \n#         name = json.load(r)\n# except IOError: \n#     print(\"First-time login\")\n#     # If the user was found in the history file, welcome them back \n# if name != \"\": \n#     print(\"Welcome back, \" + name + \"!\")\n# else: # If the history file doesn't exist, ask the user for their name\n#     name = input(\"Hello! What's your name? \") \n#     print(\"Welcome, \" + name + \"!\")\n#   # Save the user's name to the history file \n# try:\n#     with open(filename, 'w') as f: \n#         json.dump(name, f)\n# except IOError: \n#      print(\"There was a problem writing to the history file.\")\n\n\n# import json\n\n# try:\n#     # Try to open the JSON file\n#     with open('data1.json', 'r') as file:\n#         # Load the data from the file\n#         data = json.load(file)  #read\n#         print(f\"Welcome back, {data['name']}!\")\n        \n# except IOError:\n#     # If the file does not exist, ask the user for a name\n#     name = input(\"Please enter your name: \")\n#     data = {\"name\": name}\n    \n#     # Write the data to a new JSON file\n#     with open('data1.json', 'w') as file:\n#         json.dump(data, file)   #write\n#         print(f\"Welcome, {name}! Your name has been saved.\")\n\n#---------------\n# import os\n# import json\n\n# # Check if the file exists\n# if os.path.isfile('data.json'):\n#     # Open the JSON file\n#     with open('data.json', 'r') as file:\n#         # Load the data from the file\n#         data = json.load(file)\n#     # Print the data\n#     print(data)\n# else:\n#     # Ask the user for their name\n#     name = input('Enter your name: ')\n#     # Create a dictionary with the user's name\n#     data = {'name': name}\n#     # Open the JSON file for writing\n#     with open('data.json', 'w') as file:\n#         # Write the data to the file in JSON format\n#         json.dump(data, file)\n        \n# ---------------------------------------\n# pip installer\n# --------------------------------------\n# The requests library is the de facto standard for making HTTP requests in Python. \n# It abstracts the complexities of making requests behind a beautiful, simple API so \n# that you can focus on interacting with services and consuming data in your application.\n#  https://realpython.com/python-requests/\n\n\n# in a terminal window run \n# pip show requests\n# pip install requests \n\n# f-strings - they are your friend.  :-)\n\n# name = \"Eric\"\n# age = 74\n# shoesize = 9\n# print(f\"Hello, {name}. You are {age}. And your shoesize is {shoesize}\" )\n# print(\"Hello, {name}. You are {age}.And your shoesize is {shoesize}\")\n# print(\"Hello\", name,\". You are\", age, \". And your shoesize is\", shoesize, end='')\n\n#------------------------------\n# debugging\n#-------------------------------\n\n# # # Python program with 2 errors \n# var = \"Double Value\" \n# sumvalue = (var , 4)\n\n\n# def dosomething(valuetocheck): \n#     if valuetocheck > 4: \n#         print(\"Bad indent\")\n\n# dosomething(5)\n\n# def logage(age):\n#     assert (age <= 0), \"Age must be greater than 0\"\n#     if age == 5:\n#         print(\"yay\")\n\n# logage(0)\n# logage(5)\n\n#print(var, 4)\n\n# Ask the user for a value and confirm the supplied value is greater than 0\n# def checkvalue(valuetocheck): \n#     assert (type(valuetocheck) is int), \"You must enter a number.\"\n#     assert (valuetocheck > 0), \"Value entered must be greater than 0\" \n#     if valuetocheck > 4: \n#         print(\"Value is greater than 4\")\n\n# var = int(input(\"Enter a number greater than 0: \")) \n# checkvalue(var)\n\n\n# import os\n\n# def new_user():\n#     confirm = \"N\"\n#     while confirm != 'Y':\n#         username = input(\"Enter the username \")\n#         print(\"use the username '\" + username + \"'? Y/N\")\n#         confirm = input().upper()\n#     os.system(\"sudo adduser \" + username)\n    \n# def del_user():\n#     confirm = \"N\"\n#     while confirm != 'Y':\n#         username = input(\"Enter the username \")\n#         print(\"use the username '\" + username + \"'? Y/N\")\n#         confirm = input().upper()\n#     os.system(\"sudo userdel \" + username)\n    \n# #new_user()\n# del_user()","undoManager":{"mark":99,"position":100,"stack":[[{"start":{"row":603,"column":0},"end":{"row":603,"column":14},"action":"remove","lines":["dosomething(5)"],"id":2809}],[{"start":{"row":598,"column":20},"end":{"row":599,"column":0},"action":"insert","lines":["",""],"id":2810}],[{"start":{"row":598,"column":0},"end":{"row":599,"column":0},"action":"insert","lines":["",""],"id":2811}],[{"start":{"row":598,"column":0},"end":{"row":599,"column":0},"action":"remove","lines":["",""],"id":2812}],[{"start":{"row":599,"column":0},"end":{"row":600,"column":0},"action":"insert","lines":["",""],"id":2813}],[{"start":{"row":599,"column":0},"end":{"row":599,"column":14},"action":"insert","lines":["dosomething(5)"],"id":2814}],[{"start":{"row":599,"column":0},"end":{"row":599,"column":14},"action":"remove","lines":["dosomething(5)"],"id":2815}],[{"start":{"row":604,"column":0},"end":{"row":605,"column":0},"action":"insert","lines":["",""],"id":2816}],[{"start":{"row":605,"column":0},"end":{"row":605,"column":14},"action":"insert","lines":["dosomething(5)"],"id":2817}],[{"start":{"row":597,"column":0},"end":{"row":597,"column":2},"action":"insert","lines":["# "],"id":2818},{"start":{"row":598,"column":0},"end":{"row":598,"column":2},"action":"insert","lines":["# "]},{"start":{"row":601,"column":0},"end":{"row":601,"column":2},"action":"insert","lines":["# "]},{"start":{"row":602,"column":0},"end":{"row":602,"column":2},"action":"insert","lines":["# "]},{"start":{"row":603,"column":0},"end":{"row":603,"column":2},"action":"insert","lines":["# "]}],[{"start":{"row":605,"column":0},"end":{"row":605,"column":2},"action":"insert","lines":["# "],"id":2819}],[{"start":{"row":605,"column":16},"end":{"row":606,"column":0},"action":"insert","lines":["",""],"id":2820},{"start":{"row":606,"column":0},"end":{"row":607,"column":0},"action":"insert","lines":["",""]},{"start":{"row":607,"column":0},"end":{"row":607,"column":1},"action":"insert","lines":["d"]},{"start":{"row":607,"column":1},"end":{"row":607,"column":2},"action":"insert","lines":["e"]},{"start":{"row":607,"column":2},"end":{"row":607,"column":3},"action":"insert","lines":["f"]}],[{"start":{"row":607,"column":3},"end":{"row":607,"column":4},"action":"insert","lines":[" "],"id":2821},{"start":{"row":607,"column":4},"end":{"row":607,"column":5},"action":"insert","lines":["l"]},{"start":{"row":607,"column":5},"end":{"row":607,"column":6},"action":"insert","lines":["o"]},{"start":{"row":607,"column":6},"end":{"row":607,"column":7},"action":"insert","lines":["g"]},{"start":{"row":607,"column":7},"end":{"row":607,"column":8},"action":"insert","lines":["a"]},{"start":{"row":607,"column":8},"end":{"row":607,"column":9},"action":"insert","lines":["g"]},{"start":{"row":607,"column":9},"end":{"row":607,"column":10},"action":"insert","lines":["e"]}],[{"start":{"row":607,"column":10},"end":{"row":607,"column":12},"action":"insert","lines":["()"],"id":2822}],[{"start":{"row":607,"column":11},"end":{"row":607,"column":12},"action":"insert","lines":["a"],"id":2823},{"start":{"row":607,"column":12},"end":{"row":607,"column":13},"action":"insert","lines":["g"]},{"start":{"row":607,"column":13},"end":{"row":607,"column":14},"action":"insert","lines":["e"]}],[{"start":{"row":607,"column":15},"end":{"row":607,"column":16},"action":"insert","lines":[":"],"id":2824}],[{"start":{"row":607,"column":16},"end":{"row":608,"column":0},"action":"insert","lines":["",""],"id":2825},{"start":{"row":608,"column":0},"end":{"row":608,"column":4},"action":"insert","lines":["    "]},{"start":{"row":608,"column":4},"end":{"row":608,"column":5},"action":"insert","lines":["a"]},{"start":{"row":608,"column":5},"end":{"row":608,"column":6},"action":"insert","lines":["s"]},{"start":{"row":608,"column":6},"end":{"row":608,"column":7},"action":"insert","lines":["s"]},{"start":{"row":608,"column":7},"end":{"row":608,"column":8},"action":"insert","lines":["e"]},{"start":{"row":608,"column":8},"end":{"row":608,"column":9},"action":"insert","lines":["r"]},{"start":{"row":608,"column":9},"end":{"row":608,"column":10},"action":"insert","lines":["t"]}],[{"start":{"row":608,"column":10},"end":{"row":608,"column":11},"action":"insert","lines":[" "],"id":2826},{"start":{"row":608,"column":11},"end":{"row":608,"column":12},"action":"insert","lines":["a"]},{"start":{"row":608,"column":12},"end":{"row":608,"column":13},"action":"insert","lines":["g"]},{"start":{"row":608,"column":13},"end":{"row":608,"column":14},"action":"insert","lines":["e"]}],[{"start":{"row":608,"column":14},"end":{"row":608,"column":15},"action":"insert","lines":[" "],"id":2827},{"start":{"row":608,"column":15},"end":{"row":608,"column":16},"action":"insert","lines":["<"]}],[{"start":{"row":608,"column":16},"end":{"row":608,"column":17},"action":"insert","lines":["="],"id":2828}],[{"start":{"row":608,"column":17},"end":{"row":608,"column":18},"action":"insert","lines":[" "],"id":2829},{"start":{"row":608,"column":18},"end":{"row":608,"column":19},"action":"insert","lines":["0"]}],[{"start":{"row":608,"column":19},"end":{"row":609,"column":0},"action":"insert","lines":["",""],"id":2830},{"start":{"row":609,"column":0},"end":{"row":609,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":609,"column":4},"end":{"row":609,"column":5},"action":"insert","lines":["p"],"id":2831},{"start":{"row":609,"column":5},"end":{"row":609,"column":6},"action":"insert","lines":["r"]},{"start":{"row":609,"column":6},"end":{"row":609,"column":7},"action":"insert","lines":["i"]},{"start":{"row":609,"column":7},"end":{"row":609,"column":8},"action":"insert","lines":["n"]},{"start":{"row":609,"column":8},"end":{"row":609,"column":9},"action":"insert","lines":["t"]}],[{"start":{"row":609,"column":9},"end":{"row":609,"column":10},"action":"insert","lines":[" "],"id":2832}],[{"start":{"row":609,"column":9},"end":{"row":609,"column":10},"action":"remove","lines":[" "],"id":2833},{"start":{"row":609,"column":8},"end":{"row":609,"column":9},"action":"remove","lines":["t"]},{"start":{"row":609,"column":7},"end":{"row":609,"column":8},"action":"remove","lines":["n"]},{"start":{"row":609,"column":6},"end":{"row":609,"column":7},"action":"remove","lines":["i"]},{"start":{"row":609,"column":5},"end":{"row":609,"column":6},"action":"remove","lines":["r"]},{"start":{"row":609,"column":4},"end":{"row":609,"column":5},"action":"remove","lines":["p"]}],[{"start":{"row":609,"column":4},"end":{"row":609,"column":5},"action":"insert","lines":["i"],"id":2834},{"start":{"row":609,"column":5},"end":{"row":609,"column":6},"action":"insert","lines":["f"]}],[{"start":{"row":609,"column":6},"end":{"row":609,"column":7},"action":"insert","lines":[" "],"id":2835},{"start":{"row":609,"column":7},"end":{"row":609,"column":8},"action":"insert","lines":["a"]},{"start":{"row":609,"column":8},"end":{"row":609,"column":9},"action":"insert","lines":["g"]},{"start":{"row":609,"column":9},"end":{"row":609,"column":10},"action":"insert","lines":["e"]}],[{"start":{"row":609,"column":10},"end":{"row":609,"column":11},"action":"insert","lines":[" "],"id":2836},{"start":{"row":609,"column":11},"end":{"row":609,"column":12},"action":"insert","lines":["="]},{"start":{"row":609,"column":12},"end":{"row":609,"column":13},"action":"insert","lines":["="]}],[{"start":{"row":609,"column":13},"end":{"row":609,"column":14},"action":"insert","lines":[" "],"id":2837},{"start":{"row":609,"column":14},"end":{"row":609,"column":15},"action":"insert","lines":["5"]}],[{"start":{"row":609,"column":15},"end":{"row":609,"column":16},"action":"insert","lines":[";"],"id":2838}],[{"start":{"row":609,"column":16},"end":{"row":610,"column":0},"action":"insert","lines":["",""],"id":2839},{"start":{"row":610,"column":0},"end":{"row":610,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":610,"column":0},"end":{"row":610,"column":4},"action":"remove","lines":["    "],"id":2840},{"start":{"row":609,"column":16},"end":{"row":610,"column":0},"action":"remove","lines":["",""]},{"start":{"row":609,"column":15},"end":{"row":609,"column":16},"action":"remove","lines":[";"]}],[{"start":{"row":609,"column":15},"end":{"row":609,"column":16},"action":"insert","lines":[":"],"id":2841}],[{"start":{"row":609,"column":16},"end":{"row":610,"column":0},"action":"insert","lines":["",""],"id":2842},{"start":{"row":610,"column":0},"end":{"row":610,"column":8},"action":"insert","lines":["        "]},{"start":{"row":610,"column":8},"end":{"row":610,"column":9},"action":"insert","lines":["p"]},{"start":{"row":610,"column":9},"end":{"row":610,"column":10},"action":"insert","lines":["r"]},{"start":{"row":610,"column":10},"end":{"row":610,"column":11},"action":"insert","lines":["i"]},{"start":{"row":610,"column":11},"end":{"row":610,"column":12},"action":"insert","lines":["n"]},{"start":{"row":610,"column":12},"end":{"row":610,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":610,"column":13},"end":{"row":610,"column":14},"action":"insert","lines":[" "],"id":2843}],[{"start":{"row":610,"column":13},"end":{"row":610,"column":14},"action":"remove","lines":[" "],"id":2844}],[{"start":{"row":610,"column":13},"end":{"row":610,"column":15},"action":"insert","lines":["()"],"id":2845}],[{"start":{"row":610,"column":14},"end":{"row":610,"column":16},"action":"insert","lines":["\"\""],"id":2846}],[{"start":{"row":610,"column":15},"end":{"row":610,"column":16},"action":"insert","lines":["y"],"id":2847},{"start":{"row":610,"column":16},"end":{"row":610,"column":17},"action":"insert","lines":["a"]},{"start":{"row":610,"column":17},"end":{"row":610,"column":18},"action":"insert","lines":["y"]},{"start":{"row":610,"column":18},"end":{"row":610,"column":19},"action":"insert","lines":["a"]}],[{"start":{"row":610,"column":18},"end":{"row":610,"column":19},"action":"remove","lines":["a"],"id":2848}],[{"start":{"row":610,"column":20},"end":{"row":611,"column":0},"action":"insert","lines":["",""],"id":2849},{"start":{"row":611,"column":0},"end":{"row":611,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":611,"column":4},"end":{"row":611,"column":8},"action":"remove","lines":["    "],"id":2850},{"start":{"row":611,"column":0},"end":{"row":611,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":611,"column":0},"end":{"row":612,"column":0},"action":"insert","lines":["",""],"id":2851}],[{"start":{"row":612,"column":0},"end":{"row":612,"column":1},"action":"insert","lines":["l"],"id":2852},{"start":{"row":612,"column":1},"end":{"row":612,"column":2},"action":"insert","lines":["o"]},{"start":{"row":612,"column":2},"end":{"row":612,"column":3},"action":"insert","lines":["g"]}],[{"start":{"row":612,"column":0},"end":{"row":612,"column":3},"action":"remove","lines":["log"],"id":2853},{"start":{"row":612,"column":0},"end":{"row":612,"column":8},"action":"insert","lines":["logage()"]}],[{"start":{"row":612,"column":7},"end":{"row":612,"column":8},"action":"insert","lines":["0"],"id":2854}],[{"start":{"row":608,"column":19},"end":{"row":608,"column":20},"action":"insert","lines":[" "],"id":2855}],[{"start":{"row":608,"column":19},"end":{"row":608,"column":20},"action":"remove","lines":[" "],"id":2856}],[{"start":{"row":608,"column":19},"end":{"row":608,"column":20},"action":"insert","lines":[","],"id":2857}],[{"start":{"row":608,"column":20},"end":{"row":608,"column":21},"action":"insert","lines":[" "],"id":2858}],[{"start":{"row":608,"column":21},"end":{"row":608,"column":22},"action":"insert","lines":["p"],"id":2859},{"start":{"row":608,"column":22},"end":{"row":608,"column":23},"action":"insert","lines":["r"]},{"start":{"row":608,"column":23},"end":{"row":608,"column":24},"action":"insert","lines":["i"]},{"start":{"row":608,"column":24},"end":{"row":608,"column":25},"action":"insert","lines":["n"]},{"start":{"row":608,"column":25},"end":{"row":608,"column":26},"action":"insert","lines":["t"]}],[{"start":{"row":608,"column":26},"end":{"row":608,"column":28},"action":"insert","lines":["()"],"id":2860}],[{"start":{"row":608,"column":27},"end":{"row":608,"column":29},"action":"insert","lines":["\"\""],"id":2861}],[{"start":{"row":608,"column":28},"end":{"row":608,"column":29},"action":"insert","lines":["A"],"id":2862},{"start":{"row":608,"column":29},"end":{"row":608,"column":30},"action":"insert","lines":["g"]},{"start":{"row":608,"column":30},"end":{"row":608,"column":31},"action":"insert","lines":["e"]}],[{"start":{"row":608,"column":31},"end":{"row":608,"column":32},"action":"insert","lines":[" "],"id":2863},{"start":{"row":608,"column":32},"end":{"row":608,"column":33},"action":"insert","lines":["m"]},{"start":{"row":608,"column":33},"end":{"row":608,"column":34},"action":"insert","lines":["u"]},{"start":{"row":608,"column":34},"end":{"row":608,"column":35},"action":"insert","lines":["s"]},{"start":{"row":608,"column":35},"end":{"row":608,"column":36},"action":"insert","lines":["t"]}],[{"start":{"row":608,"column":36},"end":{"row":608,"column":37},"action":"insert","lines":[" "],"id":2864},{"start":{"row":608,"column":37},"end":{"row":608,"column":38},"action":"insert","lines":["b"]},{"start":{"row":608,"column":38},"end":{"row":608,"column":39},"action":"insert","lines":["e"]}],[{"start":{"row":608,"column":39},"end":{"row":608,"column":40},"action":"insert","lines":[" "],"id":2865},{"start":{"row":608,"column":40},"end":{"row":608,"column":41},"action":"insert","lines":["g"]},{"start":{"row":608,"column":41},"end":{"row":608,"column":42},"action":"insert","lines":["r"]},{"start":{"row":608,"column":42},"end":{"row":608,"column":43},"action":"insert","lines":["e"]},{"start":{"row":608,"column":43},"end":{"row":608,"column":44},"action":"insert","lines":["a"]},{"start":{"row":608,"column":44},"end":{"row":608,"column":45},"action":"insert","lines":["t"]},{"start":{"row":608,"column":45},"end":{"row":608,"column":46},"action":"insert","lines":["e"]},{"start":{"row":608,"column":46},"end":{"row":608,"column":47},"action":"insert","lines":["r"]}],[{"start":{"row":608,"column":47},"end":{"row":608,"column":48},"action":"insert","lines":[" "],"id":2866},{"start":{"row":608,"column":48},"end":{"row":608,"column":49},"action":"insert","lines":["t"]},{"start":{"row":608,"column":49},"end":{"row":608,"column":50},"action":"insert","lines":["h"]},{"start":{"row":608,"column":50},"end":{"row":608,"column":51},"action":"insert","lines":["a"]},{"start":{"row":608,"column":51},"end":{"row":608,"column":52},"action":"insert","lines":["n"]}],[{"start":{"row":608,"column":52},"end":{"row":608,"column":53},"action":"insert","lines":[" "],"id":2867},{"start":{"row":608,"column":53},"end":{"row":608,"column":54},"action":"insert","lines":["0"]}],[{"start":{"row":612,"column":9},"end":{"row":613,"column":0},"action":"insert","lines":["",""],"id":2868},{"start":{"row":613,"column":0},"end":{"row":613,"column":1},"action":"insert","lines":["l"]},{"start":{"row":613,"column":1},"end":{"row":613,"column":2},"action":"insert","lines":["g"]}],[{"start":{"row":613,"column":1},"end":{"row":613,"column":2},"action":"remove","lines":["g"],"id":2869}],[{"start":{"row":613,"column":1},"end":{"row":613,"column":2},"action":"insert","lines":["o"],"id":2870},{"start":{"row":613,"column":2},"end":{"row":613,"column":3},"action":"insert","lines":["g"]},{"start":{"row":613,"column":3},"end":{"row":613,"column":4},"action":"insert","lines":["a"]}],[{"start":{"row":613,"column":0},"end":{"row":613,"column":4},"action":"remove","lines":["loga"],"id":2871},{"start":{"row":613,"column":0},"end":{"row":613,"column":8},"action":"insert","lines":["logage()"]}],[{"start":{"row":613,"column":7},"end":{"row":613,"column":8},"action":"insert","lines":["5"],"id":2872}],[{"start":{"row":613,"column":0},"end":{"row":613,"column":1},"action":"insert","lines":["#"],"id":2873}],[{"start":{"row":613,"column":0},"end":{"row":613,"column":1},"action":"remove","lines":["#"],"id":2874}],[{"start":{"row":608,"column":26},"end":{"row":608,"column":27},"action":"remove","lines":["("],"id":2875},{"start":{"row":608,"column":25},"end":{"row":608,"column":26},"action":"remove","lines":["t"]},{"start":{"row":608,"column":24},"end":{"row":608,"column":25},"action":"remove","lines":["n"]},{"start":{"row":608,"column":23},"end":{"row":608,"column":24},"action":"remove","lines":["i"]},{"start":{"row":608,"column":22},"end":{"row":608,"column":23},"action":"remove","lines":["r"]},{"start":{"row":608,"column":21},"end":{"row":608,"column":22},"action":"remove","lines":["p"]}],[{"start":{"row":608,"column":49},"end":{"row":608,"column":50},"action":"remove","lines":[")"],"id":2876}],[{"start":{"row":613,"column":0},"end":{"row":613,"column":1},"action":"insert","lines":["#"],"id":2877}],[{"start":{"row":610,"column":4},"end":{"row":610,"column":8},"action":"remove","lines":["    "],"id":2878}],[{"start":{"row":610,"column":0},"end":{"row":610,"column":4},"action":"remove","lines":["    "],"id":2879}],[{"start":{"row":610,"column":0},"end":{"row":610,"column":4},"action":"insert","lines":["    "],"id":2880}],[{"start":{"row":610,"column":4},"end":{"row":610,"column":8},"action":"insert","lines":["    "],"id":2881}],[{"start":{"row":608,"column":11},"end":{"row":608,"column":12},"action":"insert","lines":["("],"id":2882}],[{"start":{"row":608,"column":20},"end":{"row":608,"column":21},"action":"insert","lines":[")"],"id":2883}],[{"start":{"row":613,"column":0},"end":{"row":613,"column":1},"action":"remove","lines":["#"],"id":2884}],[{"start":{"row":607,"column":0},"end":{"row":607,"column":2},"action":"insert","lines":["# "],"id":2885},{"start":{"row":608,"column":0},"end":{"row":608,"column":2},"action":"insert","lines":["# "]},{"start":{"row":609,"column":0},"end":{"row":609,"column":2},"action":"insert","lines":["# "]},{"start":{"row":610,"column":0},"end":{"row":610,"column":2},"action":"insert","lines":["# "]},{"start":{"row":612,"column":0},"end":{"row":612,"column":2},"action":"insert","lines":["# "]},{"start":{"row":613,"column":0},"end":{"row":613,"column":2},"action":"insert","lines":["# "]}],[{"start":{"row":616,"column":0},"end":{"row":617,"column":0},"action":"insert","lines":["",""],"id":2886},{"start":{"row":617,"column":0},"end":{"row":618,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":616,"column":0},"end":{"row":617,"column":0},"action":"insert","lines":["",""],"id":2887}],[{"start":{"row":617,"column":0},"end":{"row":621,"column":67},"action":"insert","lines":["# Ask the user for a value and confirm the supplied value is greater than 0","def checkvalue(valuetocheck): assert (type(valuetocheck) is int), “You must enter a","number.” assert (valuetocheck > 0), \"Value entered must be greater","than 0\" if valuetocheck > 4: print(\"Value is greater than 4\")","var = int(input(\"Enter a number greater than 0: \")) checkvalue(var)"],"id":2888}],[{"start":{"row":618,"column":30},"end":{"row":619,"column":0},"action":"insert","lines":["",""],"id":2889},{"start":{"row":619,"column":0},"end":{"row":619,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":620,"column":9},"end":{"row":621,"column":0},"action":"insert","lines":["",""],"id":2890}],[{"start":{"row":619,"column":57},"end":{"row":620,"column":0},"action":"remove","lines":["",""],"id":2891}],[{"start":{"row":619,"column":57},"end":{"row":619,"column":58},"action":"insert","lines":[" "],"id":2892}],[{"start":{"row":620,"column":57},"end":{"row":621,"column":0},"action":"remove","lines":["",""],"id":2893}],[{"start":{"row":620,"column":57},"end":{"row":620,"column":58},"action":"insert","lines":[" "],"id":2894}],[{"start":{"row":620,"column":66},"end":{"row":621,"column":0},"action":"insert","lines":["",""],"id":2895}],[{"start":{"row":620,"column":0},"end":{"row":620,"column":4},"action":"insert","lines":["    "],"id":2896}],[{"start":{"row":621,"column":0},"end":{"row":621,"column":4},"action":"insert","lines":["    "],"id":2897}],[{"start":{"row":621,"column":25},"end":{"row":622,"column":0},"action":"insert","lines":["",""],"id":2898},{"start":{"row":622,"column":0},"end":{"row":622,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":623,"column":0},"end":{"row":624,"column":0},"action":"insert","lines":["",""],"id":2899}],[{"start":{"row":619,"column":40},"end":{"row":619,"column":41},"action":"remove","lines":["“"],"id":2900}],[{"start":{"row":619,"column":40},"end":{"row":619,"column":41},"action":"insert","lines":["\""],"id":2901}],[{"start":{"row":619,"column":66},"end":{"row":619,"column":67},"action":"remove","lines":[" "],"id":2902},{"start":{"row":619,"column":65},"end":{"row":619,"column":66},"action":"remove","lines":["”"]}],[{"start":{"row":619,"column":65},"end":{"row":619,"column":66},"action":"insert","lines":["\""],"id":2903}],[{"start":{"row":624,"column":52},"end":{"row":625,"column":0},"action":"insert","lines":["",""],"id":2904}],[{"start":{"row":618,"column":0},"end":{"row":618,"column":2},"action":"insert","lines":["# "],"id":2905},{"start":{"row":619,"column":0},"end":{"row":619,"column":2},"action":"insert","lines":["# "]},{"start":{"row":620,"column":0},"end":{"row":620,"column":2},"action":"insert","lines":["# "]},{"start":{"row":621,"column":0},"end":{"row":621,"column":2},"action":"insert","lines":["# "]},{"start":{"row":622,"column":0},"end":{"row":622,"column":2},"action":"insert","lines":["# "]},{"start":{"row":624,"column":0},"end":{"row":624,"column":2},"action":"insert","lines":["# "]},{"start":{"row":625,"column":0},"end":{"row":625,"column":2},"action":"insert","lines":["# "]}],[{"start":{"row":437,"column":0},"end":{"row":437,"column":1},"action":"insert","lines":["#"],"id":2906}],[{"start":{"row":437,"column":1},"end":{"row":437,"column":2},"action":"insert","lines":[" "],"id":2907}],[{"start":{"row":408,"column":0},"end":{"row":408,"column":2},"action":"remove","lines":["# "],"id":2908},{"start":{"row":409,"column":0},"end":{"row":409,"column":2},"action":"remove","lines":["# "]},{"start":{"row":410,"column":0},"end":{"row":410,"column":2},"action":"remove","lines":["# "]},{"start":{"row":411,"column":0},"end":{"row":411,"column":2},"action":"remove","lines":["# "]},{"start":{"row":412,"column":0},"end":{"row":412,"column":2},"action":"remove","lines":["# "]},{"start":{"row":415,"column":0},"end":{"row":415,"column":2},"action":"remove","lines":["# "]},{"start":{"row":417,"column":0},"end":{"row":417,"column":2},"action":"remove","lines":["# "]},{"start":{"row":418,"column":0},"end":{"row":418,"column":2},"action":"remove","lines":["# "]},{"start":{"row":419,"column":0},"end":{"row":419,"column":2},"action":"remove","lines":["# "]}],[{"start":{"row":408,"column":0},"end":{"row":408,"column":2},"action":"insert","lines":["# "],"id":2909},{"start":{"row":409,"column":0},"end":{"row":409,"column":2},"action":"insert","lines":["# "]},{"start":{"row":410,"column":0},"end":{"row":410,"column":2},"action":"insert","lines":["# "]},{"start":{"row":411,"column":0},"end":{"row":411,"column":2},"action":"insert","lines":["# "]},{"start":{"row":412,"column":0},"end":{"row":412,"column":2},"action":"insert","lines":["# "]},{"start":{"row":415,"column":0},"end":{"row":415,"column":2},"action":"insert","lines":["# "]},{"start":{"row":417,"column":0},"end":{"row":417,"column":2},"action":"insert","lines":["# "]},{"start":{"row":418,"column":0},"end":{"row":418,"column":2},"action":"insert","lines":["# "]},{"start":{"row":419,"column":0},"end":{"row":419,"column":2},"action":"insert","lines":["# "]}]]},"ace":{"folds":[],"scrolltop":9359.999999999944,"scrollleft":0,"selection":{"start":{"row":408,"column":2},"end":{"row":421,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0}}